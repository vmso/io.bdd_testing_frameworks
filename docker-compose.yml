version: '3.8'

services:
  # Selenium Grid Hub
  selenium-hub:
    image: selenium/hub:4.18.1
    container_name: selenium-hub
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
    environment:
      - GRID_MAX_SESSION=16
      - GRID_BROWSER_TIMEOUT=300
      - GRID_TIMEOUT=300
    networks:
      - test-network

  # Chrome Node
  chrome:
    image: selenium/node-chrome:4.18.1
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=4
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
    networks:
      - test-network

  # Firefox Node
  firefox:
    image: selenium/node-firefox:4.18.1
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=4
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
    networks:
      - test-network

  # Edge Node
  edge:
    image: selenium/node-edge:4.18.1
    shm_size: 2gb
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=4
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
    networks:
      - test-network

  # Appium Server
  appium:
    image: appium/appium:2.2.3
    container_name: appium-server
    ports:
      - "4723:4723"
      - "4724:4724"
    environment:
      - APPIUM_HOST=0.0.0.0
      - APPIUM_PORT=4723
      - APPIUM_LOG_LEVEL=info
    volumes:
      - /dev/bus/usb:/dev/bus/usb
    privileged: true
    networks:
      - test-network

  # PostgreSQL Database for Test Data
  postgres:
    image: postgres:15-alpine
    container_name: test-postgres
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sqlQueries:/docker-entrypoint-initdb.d
    networks:
      - test-network

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: test-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - test-network

  # WireMock for API Mocking
  wiremock:
    image: wiremock/wiremock:3.4.2
    container_name: wiremock-server
    ports:
      - "8080:8080"
    environment:
      - WIREMOCK_OPTIONS=--verbose
    volumes:
      - ./wiremock:/home/wiremock
    networks:
      - test-network

  # Test Results Server (Nginx)
  test-results:
    image: nginx:alpine
    container_name: test-results-server
    ports:
      - "8081:80"
    volumes:
      - ./reports:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - test-network

  # Monitoring with Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: test-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - test-network

  # Prometheus for Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: test-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - test-network

volumes:
  postgres_data:
  redis_data:
  grafana_data:
  prometheus_data:

networks:
  test-network:
    driver: bridge 