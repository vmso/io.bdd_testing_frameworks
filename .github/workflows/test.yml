name: BDD Testing Framework CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  MAVEN_OPTS: "-Xmx1024m"

jobs:
  unit-tests:
    name: Unit Tests & API Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [17]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Gauge CLI
      shell: bash
      run: |
        sudo apt-get update && sudo apt-get install -y curl
        curl -SsL https://downloads.gauge.org/stable | sh
        echo "$HOME/.gauge" >> $GITHUB_PATH
        gauge -v

    - name: Install Gauge plugins
      shell: bash
      run: |
        gauge install java || true
        gauge install screenshot || true

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        cache: maven
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install dependencies and run tests
      run: |
        # Install all modules first to resolve inter-module dependencies
        mvn clean install -DskipTests=true
        # Then run tests
        mvn test -DfailIfNoTests=false
      
    - name: Generate test reports
      run: |
        mvn org.apache.maven.plugins:maven-surefire-report-plugin:3.2.5:report || true
        mvn org.jacoco:jacoco-maven-plugin:0.8.11:report || true
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-java-${{ matrix.java-version }}
        path: |
          **/target/surefire-reports/
          **/target/site/
          **/reports/
        retention-days: 30
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports-java-${{ matrix.java-version }}
        path: |
          **/target/site/jacoco/
        retention-days: 30

  build-artifacts:
    name: Build & Package Artifacts
    runs-on: ubuntu-latest
    needs: unit-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build and package project
      run: mvn clean package -DskipTests=true
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          **/target/*.jar
          **/target/*.war
        retention-days: 7

  docker-validation:
    name: Docker & Infrastructure Validation
    runs-on: ubuntu-latest
    needs: [unit-tests, build-artifacts]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: docker build -t bdd-testing-framework:latest .
      
    - name: Validate Docker Compose configuration
      run: |
        docker-compose config
        echo "✅ Docker Compose configuration is valid"
        
    - name: Test Docker services startup
      run: |
        docker-compose up -d
        sleep 10
        docker-compose ps
        docker-compose down
        echo "✅ Docker services can start and stop successfully"
